[{"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\App.tsx":"1","C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\reportWebVitals.ts":"2","C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\Card.tsx":"3","C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\index.tsx":"4","C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\GuessCount.tsx":"5","C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\HallOfFame.tsx":"6","C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\HoFInput.tsx":"7"},{"size":3774,"mtime":1606661584728,"results":"8","hashOfConfig":"9"},{"size":519,"mtime":1606416330273,"results":"10","hashOfConfig":"9"},{"size":613,"mtime":1606508709696,"results":"11","hashOfConfig":"9"},{"size":517,"mtime":1606416330258,"results":"12","hashOfConfig":"9"},{"size":320,"mtime":1606655416312,"results":"13","hashOfConfig":"9"},{"size":1336,"mtime":1606661734190,"results":"14","hashOfConfig":"9"},{"size":1523,"mtime":1606661726379,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19dvnd1",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\App.tsx",[],"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\reportWebVitals.ts",[],"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\Card.tsx",["32"],"import React from 'react';\r\nimport './Card.css';\r\n\r\ntype CardType = {\r\n  card: string | undefined;\r\n  feedback: string;\r\n  index: number;\r\n  onClick: any;\r\n};\r\n\r\nfunction Card({ card, feedback, index, onClick }: CardType): JSX.Element {\r\n  const HIDDEN_SYMBOL = '‚ùì';\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`card ${feedback}`}\r\n      onClick={() => onClick(index, feedback)}\r\n      onKeyDown={() => onClick(index, feedback)}\r\n    >\r\n      <span className=\"symbol\">\r\n        {feedback === 'hidden' ? HIDDEN_SYMBOL : card}\r\n      </span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n",["33","34","35","36","37","38","39"],"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\index.tsx",[],"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\GuessCount.tsx",[],"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\HallOfFame.tsx",[],"C:\\laragon\\www\\sylvain\\react_hooks_memory\\src\\components\\HoFInput.tsx",[],{"ruleId":"40","severity":1,"message":"41","line":8,"column":12,"nodeType":"42","messageId":"43","endLine":8,"endColumn":15,"suggestions":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["59","60"],"jest/no-try-expect",["61"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["62"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],{"messageId":"63","fix":"64","desc":"65"},{"messageId":"66","fix":"67","desc":"68"},"no-conditional-expect","padding-line-between-statements","suggestUnknown",{"range":"69","text":"70"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"69","text":"71"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[150,153],"unknown","never"]